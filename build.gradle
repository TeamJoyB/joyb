/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Praneeth' at '30/04/16 11:42 AM' with Gradle 2.13
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.13/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

ext.libs = [

   activeMqVersion: '5.10.0',
   aspectjVersion: '1.8.4',
   commonsCodecVersion : '1.6',
   commonsCollectionsVersion : '3.1',
   commonsDbcpVersion: '1.4',
   commonsDbUtilsVersion: '1.3',
   commonsHttpClientVersion : '3.1',
   commonsIoVersion : '2.0.1',
   commonsLangVersion : '2.4',
   commonsNetVersion : '2.0',
   commonsPoolVersion : '1.5.4',
   dom4jVersion: '1.6.1',
   gradleVersion: '2.2.1',
   groovyVersion: '2.3.9',
   hibernateCoreVersion: '4.3.8.Final',
   hibernateValidatorVersion: '5.1.3.Final',
   jacksonVersion: '2.4.4',
   javaMailVersion: '1.4.1',
   jaxenVersion: '1.1.1',
   jtdsVersion: '1.3.1',
   logbackVersion: '1.1.2',
   oracleOdbcVersion: '11.2.0.1.0',
   postgresJdbcVersion: '9.4.1208',
   quartzVersion: '2.2.1',
   springVersion: '4.1.3.RELEASE',
   springSecurityVersion: '3.2.5.RELEASE',
   springHateoasVersion: '0.16.0.RELEASE',
   slf4jVersion: '1.7.10',
   tomcatVersion: '8.0.15',
   tomcatFamily: '8.x',
   xbeanVersion: '3.7',
   springfoxVersion: '2.3.0'
]

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'
    
    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
    }
}
apply plugin: 'com.bmuschko.tomcat'

tomcat {
    httpPort = 8090
    httpsPort = 8091
    enableSSL = true
    contextPath = 'sample-app'

    users {
        user {
            username = 'user1'
            password = '123456'
            roles = ['developers', 'admin']
        }

        user {
            username = 'user2'
            password = 'abcdef'
            roles = ['manager']
        }
    }
}

tomcatRun.contextPath = '/'
tomcatRunWar.contextPath = '/'


